@using BussinessObject;
@model List<Book>

<table class="table table-striped table-dark mt-3">
    <thead>
        <tr>
           
            <th scope="col">Title</th>
            <th scope="col">Author</th>
            <th scope="col">ISBN</th>
            <th scope="col">Availability</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        @{int itearator = 0; }
        @foreach (var item in Model)
        {
           
                <tr id="@item.BookID">
       
                <td>@item.Title</td>
                <td>@item.Author</td>
                <td>@item.ISBN</td>
                <td>@item.Availability</td>
                @if (item.Availability)
                {
                    <td><button onclick="borrow(@item.BookID)" class="btn btn-danger"> borrow</button></td>
                }
else
                {
            <td><button onclick="ReturnBook(@item.BookID)"  class="btn btn-danger"> Return</button></td>
                }
            </tr>
        }
    </tbody>
</table>
<script>
    function borrow(id) {
        
        $.ajax({
            type: "GET", // You can also use "POST" depending on your server-side implementation
            url: "Home/BorrowBook", // Replace with your server endpoint
            data: { id: id }, // Data to be sent to the server
            success: function (response) {
                $("#" + id).html(response);
            },
            error: function (error) {
                // Callback function to handle errors
                console.log("Error:", error);
            }
        });
    }
    function ReturnBook(id) {
       
        $.ajax({
            type: "GET", // You can also use "POST" depending on your server-side implementation
            url: "Home/ReturnBook", // Replace with your server endpoint
            data: { id: id }, // Data to be sent to the server
            success: function (response) {
                
                
                $("#" + id).html(response);
            },
            error: function (error) {
                // Callback function to handle errors
                console.log("Error:", error);
            }
        });
    }
</script>
